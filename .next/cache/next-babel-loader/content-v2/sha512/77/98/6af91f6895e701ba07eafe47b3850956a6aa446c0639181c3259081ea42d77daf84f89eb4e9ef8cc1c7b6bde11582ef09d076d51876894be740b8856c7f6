{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"E:\\\\melo\\\\nextJs\\\\06-onwards-to-a-bigger-project-starting-project\\\\pages\\\\[meetupId]\\\\index.js\";\nimport { MongoClient, ObjectId } from \"mongodb\";\nimport MeetupDetail from \"../../components/meetups/MeetupDetail\";\n\nfunction MeetupDetails(props) {\n  return /*#__PURE__*/_jsxDEV(MeetupDetail, {\n    image: props.image,\n    title: props.title,\n    address: props.address,\n    description: props.description\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 5,\n    columnNumber: 13\n  }, this);\n} // export async function getStaticPaths(){\n//     const client= await MongoClient.connect('mongodb+srv://Gabi:gabi1234@cluster0.8vrox.mongodb.net/meetup?retryWrites=true&w=majority')\n//     const db= client.db();\n//     const meetupsCollection=db.collection('meetups');\n//     const meetups=await meetupsCollection.find({},{_id:1}).toArray();\n//     client.close();\n//     return{\n//         fallback:false,\n//         paths:meetups.map((meetup)=>({params:{meetupId:meetup._id.toString()}}))\n//     }\n// }\n\n\nexport async function getStaticProps(context) {\n  const meetupId = context.params.meetupId;\n  console.log(\"ezt kiirja\");\n  const client = await MongoClient.connect('mongodb+srv://Gabi:gabi1234@cluster0.8vrox.mongodb.net/meetup?retryWrites=true&w=majority');\n  const db = client.db();\n  const meetupsCollection = db.collection('meetups');\n  const selectedMeetup = await meetupsCollection.findOne({\n    _id: ObjectId(meetupId)\n  });\n  console.log(\"ezt kiirja\");\n  console.log(selectedMeetup);\n  client.close();\n  return {\n    props: {\n      meetupData: {\n        id: selectedMeetup._id.toString(),\n        title: selectedMeetup.title,\n        address: selectedMeetup.address,\n        image: selectedMeetup.image,\n        description: selectedMeetup.description\n      }\n    }\n  };\n}\nexport default MeetupDetails;","map":{"version":3,"sources":["E:/melo/nextJs/06-onwards-to-a-bigger-project-starting-project/pages/[meetupId]/index.js"],"names":["MongoClient","ObjectId","MeetupDetail","MeetupDetails","props","image","title","address","description","getStaticProps","context","meetupId","params","console","log","client","connect","db","meetupsCollection","collection","selectedMeetup","findOne","_id","close","meetupData","id","toString"],"mappings":";;AAAA,SAASA,WAAT,EAAsBC,QAAtB,QAAsC,SAAtC;AACA,OAAOC,YAAP,MAAyB,uCAAzB;;AAEA,SAASC,aAAT,CAAuBC,KAAvB,EAA6B;AACzB,sBAAQ,QAAC,YAAD;AACR,IAAA,KAAK,EAAEA,KAAK,CAACC,KADL;AAEP,IAAA,KAAK,EAAED,KAAK,CAACE,KAFN;AAEa,IAAA,OAAO,EAAEF,KAAK,CAACG,OAF5B;AAEqC,IAAA,WAAW,EAAEH,KAAK,CAACI;AAFxD;AAAA;AAAA;AAAA;AAAA,UAAR;AAGE,C,CAEN;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAEA,OAAO,eAAeC,cAAf,CAA8BC,OAA9B,EAAsC;AACzC,QAAMC,QAAQ,GAACD,OAAO,CAACE,MAAR,CAAeD,QAA9B;AACAE,EAAAA,OAAO,CAACC,GAAR,CAAY,YAAZ;AAEA,QAAMC,MAAM,GAAE,MAAMf,WAAW,CAACgB,OAAZ,CAAoB,2FAApB,CAApB;AACA,QAAMC,EAAE,GAAEF,MAAM,CAACE,EAAP,EAAV;AACA,QAAMC,iBAAiB,GAACD,EAAE,CAACE,UAAH,CAAc,SAAd,CAAxB;AACA,QAAMC,cAAc,GAAC,MAAMF,iBAAiB,CAACG,OAAlB,CAA0B;AAACC,IAAAA,GAAG,EAAErB,QAAQ,CAACU,QAAD;AAAd,GAA1B,CAA3B;AACAE,EAAAA,OAAO,CAACC,GAAR,CAAY,YAAZ;AACAD,EAAAA,OAAO,CAACC,GAAR,CAAYM,cAAZ;AACAL,EAAAA,MAAM,CAACQ,KAAP;AAEA,SAAM;AACFnB,IAAAA,KAAK,EAAC;AACFoB,MAAAA,UAAU,EAAC;AACPC,QAAAA,EAAE,EAACL,cAAc,CAACE,GAAf,CAAmBI,QAAnB,EADI;AAEPpB,QAAAA,KAAK,EAACc,cAAc,CAACd,KAFd;AAGPC,QAAAA,OAAO,EAACa,cAAc,CAACb,OAHhB;AAIPF,QAAAA,KAAK,EAACe,cAAc,CAACf,KAJd;AAKPG,QAAAA,WAAW,EAACY,cAAc,CAACZ;AALpB;AADT;AADJ,GAAN;AAWH;AAED,eAAeL,aAAf","sourcesContent":["import { MongoClient, ObjectId } from \"mongodb\";\r\nimport MeetupDetail from \"../../components/meetups/MeetupDetail\"\r\n\r\nfunction MeetupDetails(props){\r\n    return (<MeetupDetail \r\n    image={props.image}\r\n     title={props.title} address={props.address} description={props.description} />\r\n    )}\r\n\r\n// export async function getStaticPaths(){\r\n//     const client= await MongoClient.connect('mongodb+srv://Gabi:gabi1234@cluster0.8vrox.mongodb.net/meetup?retryWrites=true&w=majority')\r\n//     const db= client.db();\r\n//     const meetupsCollection=db.collection('meetups');\r\n//     const meetups=await meetupsCollection.find({},{_id:1}).toArray();\r\n//     client.close();\r\n//     return{\r\n//         fallback:false,\r\n//         paths:meetups.map((meetup)=>({params:{meetupId:meetup._id.toString()}}))\r\n//     }\r\n// }\r\n\r\nexport async function getStaticProps(context){\r\n    const meetupId=context.params.meetupId;\r\n    console.log(\"ezt kiirja\")\r\n\r\n    const client= await MongoClient.connect('mongodb+srv://Gabi:gabi1234@cluster0.8vrox.mongodb.net/meetup?retryWrites=true&w=majority')\r\n    const db= client.db();\r\n    const meetupsCollection=db.collection('meetups');\r\n    const selectedMeetup=await meetupsCollection.findOne({_id: ObjectId(meetupId)});\r\n    console.log(\"ezt kiirja\")\r\n    console.log(selectedMeetup)\r\n    client.close()\r\n\r\n    return{\r\n        props:{\r\n            meetupData:{\r\n                id:selectedMeetup._id.toString(),\r\n                title:selectedMeetup.title,\r\n                address:selectedMeetup.address,\r\n                image:selectedMeetup.image,\r\n                description:selectedMeetup.description,\r\n            },\r\n        }\r\n    }\r\n}\r\n\r\nexport default MeetupDetails"]},"metadata":{},"sourceType":"module"}